{
    "sourceFile": "src/modules/payment/entities/payment.entity.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1757594669886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757594702658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \r\n   @CreateDateColumn({ type: 'timestamp' })\r\n   payment_date: Date;\r\n \r\n-  @\r\n+  @A\r\n   \r\n   @Column({ type: 'enum', enum: PaymentStatus , default: PaymentStatus.PENDING })\r\n   status: PaymentStatus;\r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1757594669886,
            "name": "Commit-0",
            "content": "import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  OneToOne,\r\n  JoinColumn,\r\n  CreateDateColumn,\r\n} from 'typeorm';\r\nimport { Booking } from '../../booking/entities/booking.entity';\r\nimport { ShardEntity } from 'src/common/entity/BaseEntity';\r\n\r\nexport enum PaymentStatus {\r\n  PENDING = 'pending',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n  REFUNDED = 'refunded',\r\n}\r\n\r\n@Entity('payment')\r\nexport class Payment extends ShardEntity {\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @OneToOne(() => Booking, (booking) => booking.payment)\r\n  booking: Booking;\r\n\r\n  @Column({ type: 'float' })\r\n  amount: number;\r\n\r\n  @CreateDateColumn({ type: 'timestamp' })\r\n  payment_date: Date;\r\n  \r\n  @Column({ type: 'enum', enum: PaymentStatus , default: PaymentStatus.PENDING })\r\n  status: PaymentStatus;\r\n}"
        }
    ]
}