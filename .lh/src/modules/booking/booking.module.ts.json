{
    "sourceFile": "src/modules/booking/booking.module.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1757511950006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757511955714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import { Concert } from '../concerts/entities/concert.entity';\r\n import { User } from '../users/entities/user.entity';\r\n import { BookingDetail } from '../booking-details/entities/bookingDetails.entity';\r\n @Module({\r\n-  imports: [TypeOrmModule.forFeature([Booking , Payment, Concert,User, BookingDetail,]),\r\n+  imports: [TypeOrmModule.forFeature([Booking , Payment, Concert,User, BookingDetail,User]),\r\n TransactionModule,],\r\n   controllers: [BookingController],\r\n   providers: [BookingService ,\r\n         {\r\n"
                }
            ],
            "date": 1757511950006,
            "name": "Commit-0",
            "content": "import { Module } from '@nestjs/common';\r\nimport { BookingService } from './booking.service';\r\nimport { BookingController } from './booking.controller';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Booking } from './entities/booking.entity';\r\nimport { Payment } from '../payment/entities/payment.entity';\r\nimport { TRANSACTION_MANAGER_SERVICE } from 'src/common/constants/inject-key';\r\nimport { TransactionManagerService } from 'src/common/transaction/transaction.service';\r\nimport { TransactionModule } from 'src/common/transaction/transaction.module';\r\nimport { Concert } from '../concerts/entities/concert.entity';\r\nimport { User } from '../users/entities/user.entity';\r\nimport { BookingDetail } from '../booking-details/entities/bookingDetails.entity';\r\n@Module({\r\n  imports: [TypeOrmModule.forFeature([Booking , Payment, Concert,User, BookingDetail,]),\r\nTransactionModule,],\r\n  controllers: [BookingController],\r\n  providers: [BookingService ,\r\n        {\r\n            provide: TRANSACTION_MANAGER_SERVICE,\r\n            useClass: TransactionManagerService,\r\n        },\r\n  ],\r\n  exports:[BookingService]\r\n})\r\nexport class BookingModule {}\r\n"
        }
    ]
}